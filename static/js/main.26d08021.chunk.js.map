{"version":3,"sources":["redux/actions/actionIdentifiers.js","redux/actions/actionCreators.js","redux/thunks/currentUser.js","routes/Questions.js","routes/Home.js","components/PrivateRoute.js","routes/Leaderboard.js","redux/thunks/questions.js","routes/AddQuestion.js","routes/QuestionDetails.js","App.js","reportWebVitals.js","redux/reducers/currentUser.js","redux/reducers/users.js","redux/reducers/questions.js","redux/reducers/index.js","redux/middleware/index.js","index.js"],"names":["USER_LOGIN","USER_LOGOUT","ADD_QUESTION","ANSWER_QUESTION","userLogin","userId","type","payload","CURRENT_USER","handleUserLogout","dispatch","getState","localStorage","removeItem","connect","users","questions","currentUser","location","filter","URLSearchParams","search","get","console","log","Object","keys","questionId","answers","includes","map","id","optionOne","text","optionTwo","timestamp","author","name","avatarURL","sort","a","b","userInfo","props","to","question","isUserSelected","login","handleLoginPersistance","user","onClick","state","userIds","logout","restProps","find","leaderboard","score","length","item","handleAddQuestion","optionOneText","optionTwoText","addQuestion","v4","replace","slice","Date","now","votes","o1","o2","onSubmit","e","preventDefault","target","value","required","params","match","answerState","answerStatitistics","isPresent","questionItem","optionOneAnswers","optionTwoAnswers","total","toFixed","onAnswer","selectedOption","answerQuestion","answerHandler","ui","disabled","className","exact","path","component","Home","Leaderboard","AddQuestion","QuestionDetails","Questions","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","sarahedo","tylermcginnis","johndoe","reducer","combineReducers","action","q","middleware","applyMiddleware","logger","thunk","store","createStore","composeWithDevTools","ReactDOM","render","StrictMode","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.26d08021.chunk.js","sourcesContent":["export const USER_LOGIN = 'USER_LOGIN'\nexport const USER_LOGOUT = 'USER_LOGOUT'\n\nexport const ADD_QUESTION = 'ADD_QUESTION'\nexport const ANSWER_QUESTION = 'ANSWER_QUESTION'\n","import { ADD_QUESTION, ANSWER_QUESTION, USER_LOGIN, USER_LOGOUT } from \"./actionIdentifiers\";\r\n\r\nexport function userLogin(userId) {\r\n    return {\r\n        type: USER_LOGIN,\r\n        payload: {\r\n            userId\r\n        }\r\n    }\r\n}\r\n\r\nexport function userLogout() {\r\n    return {\r\n        type: USER_LOGOUT,\r\n    }\r\n}\r\n\r\nexport function addQuestion(question) {\r\n    return {\r\n        type: ADD_QUESTION,\r\n        payload: { question }\r\n    }\r\n}\r\n\r\n\r\nexport function answerQuestion(questionId, userId, selectedOption) {\r\n    return {\r\n        type: ANSWER_QUESTION,\r\n        payload: { questionId, userId, selectedOption }\r\n    }\r\n}\r\n","import { userLogin, userLogout } from \"../actions/actionCreators\"\n\nconst CURRENT_USER = 'currentUser'\n\nexport function handleUserLogin() {\n    return function(dispatch, getState) {\n        const storedUserId = localStorage.getItem(CURRENT_USER)\n\n        if (storedUserId) {\n            dispatch(userLogin(storedUserId))\n        }\n    }\n}\n\nexport function handleUserLogout() {\n    return function(dispatch, getState) {\n        localStorage.removeItem(CURRENT_USER)\n        dispatch(userLogout())\n    }\n}\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Link, NavLink } from 'react-router-dom'\r\n\r\nfunction Questions(props) {\r\n    const { userInfo, questions } = props\r\n\r\n    return (\r\n        <div>\r\n            <h2>Questions</h2>\r\n            <div>\r\n                <NavLink to='/questions?filter=answered'>Answered</NavLink>\r\n                <NavLink to='/questions?filter=unanswered'>Unanswered</NavLink>\r\n                <NavLink to='/questions?filter=all'>All</NavLink>\r\n            </div>\r\n            <div>\r\n                <ul>\r\n                    {questions.map(question => (\r\n                        <li key={question.id}>\r\n                            <h4>{question.author.name} asks</h4>\r\n                            <p>\r\n                                Would you rather {' '}\r\n                                <span>{question.optionOne.text}</span>\r\n                                {' '}or{' '}\r\n                                <span>{question.optionTwo.text}</span>\r\n                            </p>\r\n                            <Link to={`/questions/${question.id}`}>\r\n                                Go to poll\r\n                            </Link>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({ users, questions, currentUser }, { location }) => {\r\n    const filter = new URLSearchParams(location.search).get('filter')\r\n    console.log('filter: ', filter)\r\n\r\n    const questionList = Object.keys(questions).filter(questionId => {\r\n        if (filter === 'answered') {\r\n            return Object.keys(users[currentUser].answers).includes(questionId)\r\n        }\r\n        if (filter === 'unanswered') {\r\n            return !Object.keys(users[currentUser].answers).includes(questionId)\r\n        }\r\n        return true\r\n    })\r\n        .map(questionId => {\r\n            const id = questionId\r\n            const optionOne = { text: questions[questionId].optionOne.text }\r\n            const optionTwo = { text: questions[questionId].optionTwo.text }\r\n            const timestamp = questions[questionId].timestamp\r\n\r\n            const author = {}\r\n            author.name = users[questions[questionId].author].name\r\n            author.avatarURL = users[questions[questionId].author].avatarURL\r\n\r\n            return { id, optionOne, optionTwo, timestamp, author }\r\n        })\r\n        .sort((a, b) => b.timestamp - a.timestamp)\r\n\r\n    const userInfo = {\r\n        id: currentUser,\r\n        name: users[currentUser].name,\r\n        avatarURL: users[currentUser].avatarURL\r\n    }\r\n\r\n    return { questions: questionList, userInfo }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Questions)","import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router'\r\nimport { userLogin } from '../redux/actions/actionCreators'\r\nimport { handleUserLogin } from '../redux/thunks/currentUser'\r\nimport Questions from './Questions'\r\n\r\nfunction Home(props) {\r\n    const { isUserSelected, users, handleLoginPersistance, login } = props\r\n\r\n    let ui = null\r\n    if (!isUserSelected) {\r\n        ui = <div>\r\n            <h2>Select a user</h2>\r\n            <ul>\r\n                {users.map(user => (\r\n                    <li key={user.id}>\r\n                        <p>{user.name}</p>\r\n                        <button\r\n                            onClick={() => login(user.id)}\r\n                        >Select this user</button>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    } else {\r\n        ui = <Redirect to='/questions' />\r\n    }\r\n    return ui\r\n}\r\n\r\nconst mapStateToProps = ({ users, currentUser, questions }) => {\r\n    const isUserSelected = currentUser !== '' && Object.keys(users).includes(currentUser)\r\n\r\n    return {\r\n        isUserSelected,\r\n        users: Object.keys(users).map(userId => ({\r\n            name: users[userId].name,\r\n            id: users[userId].id,\r\n            avatarURL: users[userId].avatarURL\r\n        }))\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    login(userId) { return dispatch(userLogin(userId)) }\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect, Route } from 'react-router'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { handleUserLogout } from '../redux/thunks/currentUser'\r\n\r\nfunction PrivateRoute(props) {\r\n    const { currentUser, userIds, logout, ...restProps } = props\r\n\r\n    if (userIds.find(id => id === currentUser)) {\r\n        return <div>\r\n            <button\r\n                onClick={logout}\r\n            >\r\n                Logout\r\n            </button>\r\n            <div>\r\n                <NavLink to='/questions'>Questions</NavLink>\r\n                <NavLink to='/questions/add'>Add Question</NavLink>\r\n                <NavLink to='/leaderboard'>Leaderboard</NavLink>\r\n            </div>\r\n            <Route {...restProps} />\r\n        </div>\r\n    } else {\r\n        return <Redirect to='/' />\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    currentUser: state.currentUser,\r\n    userIds: Object.keys(state.users)\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    logout() { return dispatch(handleUserLogout()) }\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PrivateRoute)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nfunction Leaderboard(props) {\r\n    const { leaderboard } = props\r\n\r\n    return (\r\n        <div>\r\n            <h2>Leaderboard</h2>\r\n            <div>\r\n                <ol>\r\n                    {leaderboard.map(item => (\r\n                        <li key={item.id}>\r\n                            <p>{item.name}</p>\r\n                            <p>Score: {item.score}</p>\r\n                        </li>\r\n                    ))}\r\n                </ol>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({ users, questions, currentUser }) => {\r\n    const leaderboard = Object.keys(users).map(userId => {\r\n        const name = users[userId].name\r\n        const id = users[userId].id\r\n        const avatarURL = users[userId].avatarURL\r\n\r\n        const answers = Object.keys(users[userId].answers).length\r\n        const questions = users[userId].questions.length\r\n        const score = answers + questions\r\n\r\n        return { name, id, avatarURL, score }\r\n    }).sort((a, b) => b.score - a.score)\r\n\r\n    const userInfo = {\r\n        id: currentUser,\r\n        name: users[currentUser].name,\r\n        avatarURL: users[currentUser].avatarURL\r\n    }\r\n\r\n    return {\r\n        leaderboard,\r\n        userInfo\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Leaderboard)\r\n","import { v4 } from 'uuid'\nimport { addQuestion } from '../actions/actionCreators'\n\nexport function handleAddQuestion(optionOneText, optionTwoText) {\n    \n    return function(dispatch, getState) {\n        const id = v4().replace('-', '').slice(0, 22)\n        const timestamp = Date.now()\n        const author = getState().currentUser\n\n        const question = {\n            id,\n            timestamp,\n            author,\n            optionOne: {\n                votes: [],\n                text: optionOneText\n            },\n            optionTwo: {\n                votes: [],\n                text: optionTwoText\n            },\n        }\n\n        dispatch(addQuestion(question))\n    }\n}","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { handleAddQuestion } from '../redux/thunks/questions'\r\n\r\nfunction AddQuestion(props) {\r\n    const { userInfo, addQuestion } = props\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        const o1 = e.target['optionOne'].value\r\n        const o2 = e.target['optionTwo'].value\r\n        addQuestion(o1, o2)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>Hello from Add Question Page for user {userInfo.name}</h2>\r\n\r\n            <form onSubmit={submitHandler}>\r\n                <input type='text' name='optionOne' required />\r\n                <input type='text' name='optionTwo' required />\r\n                <button type='submit'>\r\n                    Add Question\r\n                </button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({ currentUser, users }) => {\r\n    const userInfo = {\r\n        id: currentUser,\r\n        name: users[currentUser].name,\r\n        avatarURL: users[currentUser].avatarURL\r\n    }\r\n    return { userInfo }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    addQuestion(o1, o2) { return dispatch(handleAddQuestion(o1, o2)) }\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddQuestion)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { answerQuestion } from '../redux/actions/actionCreators'\r\n\r\nfunction QuestionDetails(props) {\r\n    const { isPresent, userInfo, question, onAnswer } = props\r\n\r\n    const answerHandler = (selectedOption) => {\r\n        onAnswer(question.id, userInfo.id, selectedOption)\r\n    }\r\n\r\n    let ui = null\r\n    if (isPresent) {\r\n        ui = (\r\n            <div>\r\n                <h4>{question.author.name} asks</h4>\r\n                <p>\r\n                    Would you rather {' '}\r\n                    <button\r\n                        disabled={question.answerState !== 0}\r\n                        onClick={e => answerHandler('optionOne')}\r\n                    >\r\n                        {question.optionOne.text}\r\n                        {\r\n                            question.answerState !== 0\r\n                            && <p>{question.answerStatitistics.optionOne}%</p>\r\n                        }\r\n                    </button>\r\n                    {' '}or{' '}\r\n                    <button\r\n                        disabled={question.answerState !== 0}\r\n                        onClick={e => answerHandler('optionTwo')}\r\n                    >\r\n                        {question.optionTwo.text}\r\n                        {\r\n                            question.answerState !== 0\r\n                            && <p>{question.answerStatitistics.optionTwo}%</p>\r\n                        }\r\n                    </button>\r\n                </p>\r\n            </div>\r\n        )\r\n    } else {\r\n        ui = <div>Question not found</div>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            Hello from QuestionDetails Page for user {userInfo.name}\r\n            {'\\n'}\r\n            {ui}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({ users, questions, currentUser }, { match: { params } }) => {\r\n    const userInfo = {\r\n        id: currentUser,\r\n        name: users[currentUser].name,\r\n        avatarURL: users[currentUser].avatarURL\r\n    }\r\n\r\n    const questionId = params.id\r\n\r\n    const question = {\r\n        id: '',\r\n        optionOne: { text: '' },\r\n        optionTwo: { text: '' },\r\n        answerState: 0,\r\n        answerStatitistics: {\r\n            optionOne: 0,\r\n            optionTwo: 0\r\n        },\r\n        author: {\r\n            name: '',\r\n            avatarURL: '',\r\n            id: ''\r\n        }\r\n    }\r\n\r\n    const isPresent = Object.keys(questions).includes(questionId)\r\n\r\n    if (isPresent) {\r\n        const questionItem = questions[questionId]\r\n        question.id = questionId\r\n        question.optionOne.text = questionItem.optionOne.text\r\n        question.optionTwo.text = questionItem.optionTwo.text\r\n\r\n        switch (users[currentUser].answers[questionId]) {\r\n            case 'optionOne':\r\n                question.answerState = 1\r\n                break;\r\n            case 'optionTwo':\r\n                question.answerState = 2\r\n                break;\r\n            default:\r\n                question.answerState = 0\r\n        }\r\n\r\n        const optionOneAnswers = questions[questionId].optionOne.votes.length\r\n        const optionTwoAnswers = questions[questionId].optionTwo.votes.length\r\n        const total = optionOneAnswers + optionTwoAnswers\r\n\r\n        question.answerStatitistics.optionOne = (100 * optionOneAnswers / total).toFixed(2);\r\n        question.answerStatitistics.optionTwo = (100 * optionTwoAnswers / total).toFixed(2);\r\n\r\n        question.author.id = users[questions[questionId].author].id\r\n        question.author.name = users[questions[questionId].author].name\r\n        question.author.avatarURL = users[questions[questionId].author].avatarURL\r\n\r\n    }\r\n\r\n\r\n    return { userInfo, question, isPresent }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    onAnswer(questionId, userId, selectedOption) {\r\n        return dispatch(answerQuestion(questionId, userId, selectedOption))\r\n    }\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(QuestionDetails)","import { Switch, Route } from 'react-router';\r\nimport Home from './routes/Home'\r\nimport PrivateRoute from './components/PrivateRoute';\r\nimport './App.css';\r\nimport Questions from './routes/Questions';\r\nimport Leaderboard from './routes/Leaderboard';\r\nimport AddQuestion from './routes/AddQuestion';\r\nimport QuestionDetails from './routes/QuestionDetails';\r\nimport { useEffect } from 'react';\r\nimport {connect} from 'react-redux'\r\nimport { setCurrentUser } from './redux/actions/actionCreators';\r\n\r\nfunction App(props) {\r\n  return (\r\n    <div className=\"App\">\r\n      <Switch>\r\n        <Route exact path='/' component={Home}/>\r\n        <PrivateRoute path='/leaderboard' component={Leaderboard} />\r\n        <PrivateRoute path='/questions/add' component={AddQuestion} />\r\n        <PrivateRoute path='/questions/:id' component={QuestionDetails} />\r\n        <PrivateRoute path='/questions' component={Questions} />\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default connect()(App);\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { USER_LOGIN, USER_LOGOUT } from \"../actions/actionIdentifiers\";\r\n\r\nconst initialState = 'johndoe'\r\n\r\nexport default function currentUser(state = initialState, action) {\r\n    switch (action.type) {\r\n        case USER_LOGIN:\r\n            return action.payload.userId\r\n        case USER_LOGOUT:\r\n            return ''\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import { ADD_QUESTION, ANSWER_QUESTION } from '../actions/actionIdentifiers'\r\n\r\nconst initialState = {\r\n    sarahedo: {\r\n        id: 'sarahedo',\r\n        name: 'Sarah Edo',\r\n        avatarURL: '',\r\n        answers: {\r\n            \"8xf0y6ziyjabvozdd253nd\": 'optionOne',\r\n            \"6ni6ok3ym7mf1p33lnez\": 'optionTwo',\r\n            \"am8ehyc8byjqgar0jgpub9\": 'optionTwo',\r\n            \"loxhs1bqm25b708cmbf3g\": 'optionTwo'\r\n        },\r\n        questions: ['8xf0y6ziyjabvozdd253nd', 'am8ehyc8byjqgar0jgpub9']\r\n    },\r\n    tylermcginnis: {\r\n        id: 'tylermcginnis',\r\n        name: 'Tyler McGinnis',\r\n        avatarURL: '',\r\n        answers: {\r\n            \"vthrdm985a262al8qx3do\": 'optionOne',\r\n            \"xj352vofupe1dqz9emx13r\": 'optionTwo',\r\n        },\r\n        questions: ['loxhs1bqm25b708cmbf3g', 'vthrdm985a262al8qx3do'],\r\n    },\r\n    johndoe: {\r\n        id: 'johndoe',\r\n        name: 'John Doe',\r\n        avatarURL: '',\r\n        answers: {\r\n            \"xj352vofupe1dqz9emx13r\": 'optionOne',\r\n            \"vthrdm985a262al8qx3do\": 'optionTwo',\r\n            \"6ni6ok3ym7mf1p33lnez\": 'optionTwo'\r\n        },\r\n        questions: ['6ni6ok3ym7mf1p33lnez', 'xj352vofupe1dqz9emx13r'],\r\n    }\r\n}\r\n\r\nexport default function users(state = initialState, action) {\r\n    switch (action.type) {\r\n        case ADD_QUESTION:\r\n            const q = action.payload.question\r\n            return {\r\n                ...state,\r\n                [q.author]: {\r\n                    ...state[q.author],\r\n                    questions: [...state[q.author].questions, q.id]\r\n                }\r\n            }\r\n\r\n        case ANSWER_QUESTION:\r\n            const { questionId, userId, selectedOption } = action.payload\r\n            return {\r\n                ...state,\r\n                [userId]: {\r\n                    ...state[userId],\r\n                    answers: {\r\n                        ...state[userId].answers,\r\n                        [questionId]: selectedOption\r\n                    }\r\n                }\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import { ADD_QUESTION, ANSWER_QUESTION } from \"../actions/actionIdentifiers\";\r\n\r\nconst initialState = {\r\n    \"8xf0y6ziyjabvozdd253nd\": {\r\n        id: '8xf0y6ziyjabvozdd253nd',\r\n        author: 'sarahedo',\r\n        timestamp: 1467166872634,\r\n        optionOne: {\r\n            votes: ['sarahedo'],\r\n            text: 'have horrible short term memory',\r\n        },\r\n        optionTwo: {\r\n            votes: [],\r\n            text: 'have horrible long term memory'\r\n        }\r\n    },\r\n    \"6ni6ok3ym7mf1p33lnez\": {\r\n        id: '6ni6ok3ym7mf1p33lnez',\r\n        author: 'johndoe',\r\n        timestamp: 1468479767190,\r\n        optionOne: {\r\n            votes: [],\r\n            text: 'become a superhero',\r\n        },\r\n        optionTwo: {\r\n            votes: ['johndoe', 'sarahedo'],\r\n            text: 'become a supervillain'\r\n        }\r\n    },\r\n    \"am8ehyc8byjqgar0jgpub9\": {\r\n        id: 'am8ehyc8byjqgar0jgpub9',\r\n        author: 'sarahedo',\r\n        timestamp: 1488579767190,\r\n        optionOne: {\r\n            votes: [],\r\n            text: 'be telekinetic',\r\n        },\r\n        optionTwo: {\r\n            votes: ['sarahedo'],\r\n            text: 'be telepathic'\r\n        }\r\n    },\r\n    \"loxhs1bqm25b708cmbf3g\": {\r\n        id: 'loxhs1bqm25b708cmbf3g',\r\n        author: 'tylermcginnis',\r\n        timestamp: 1482579767190,\r\n        optionOne: {\r\n            votes: [],\r\n            text: 'be a front-end developer',\r\n        },\r\n        optionTwo: {\r\n            votes: ['sarahedo'],\r\n            text: 'be a back-end developer'\r\n        }\r\n    },\r\n    \"vthrdm985a262al8qx3do\": {\r\n        id: 'vthrdm985a262al8qx3do',\r\n        author: 'tylermcginnis',\r\n        timestamp: 1489579767190,\r\n        optionOne: {\r\n            votes: ['tylermcginnis'],\r\n            text: 'find $50 yourself',\r\n        },\r\n        optionTwo: {\r\n            votes: ['johndoe'],\r\n            text: 'have your best friend find $500'\r\n        }\r\n    },\r\n    \"xj352vofupe1dqz9emx13r\": {\r\n        id: 'xj352vofupe1dqz9emx13r',\r\n        author: 'johndoe',\r\n        timestamp: 1493579767190,\r\n        optionOne: {\r\n            votes: ['johndoe'],\r\n            text: 'write JavaScript',\r\n        },\r\n        optionTwo: {\r\n            votes: ['tylermcginnis'],\r\n            text: 'write Swift'\r\n        }\r\n    },\r\n}\r\n\r\nexport default function questions(state = initialState, action) {\r\n    switch (action.type) {\r\n        case ADD_QUESTION:\r\n            return {\r\n                ...state,\r\n                [action.payload.question.id]: action.payload.question\r\n            }\r\n\r\n        case ANSWER_QUESTION:\r\n            const { questionId, userId, selectedOption } = action.payload\r\n            return {\r\n                ...state,\r\n                [questionId]: {\r\n                    ...state[questionId],\r\n                    [selectedOption]: {\r\n                        ...state[questionId][selectedOption],\r\n                        votes: [...state[questionId][selectedOption].votes, userId]\r\n                    }\r\n                }\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import currentUser from \"./currentUser\";\r\nimport users from \"./users\";\r\nimport questions from \"./questions\";\r\n\r\nimport { combineReducers } from \"redux\";\r\n\r\nconst reducer = combineReducers({\r\n    currentUser,\r\n    users,\r\n    questions\r\n})\r\n\r\nexport default reducer\r\n","import thunk from \"redux-thunk\";\r\nimport logger from \"redux-logger\";\r\nimport { applyMiddleware } from \"redux\";\r\n\r\nconst middleware = applyMiddleware(logger, thunk)\r\n\r\nexport default middleware\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { createStore } from 'redux';\r\nimport { Provider } from 'react-redux'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport reducer from './redux/reducers';\r\nimport middleware from './redux/middleware';\r\n\r\nconst store = createStore(reducer, composeWithDevTools(middleware))\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n        <App />\r\n      </BrowserRouter>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}