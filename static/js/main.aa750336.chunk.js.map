{"version":3,"sources":["redux/actions/actionIdentifiers.js","routes/Home.js","redux/actions/actionCreators.js","components/PrivateRoute.js","routes/Questions.js","routes/Leaderboard.js","redux/thunks/questions.js","routes/AddQuestion.js","routes/QuestionDetails.js","App.js","reportWebVitals.js","redux/reducers/currentUser.js","redux/reducers/users.js","redux/reducers/questions.js","redux/reducers/index.js","redux/middleware/index.js","index.js"],"names":["USER_LOGIN","USER_LOGOUT","QUESTION_CREATE","QUESTION_ANSWER","connect","state","users","Object","keys","map","userId","id","name","avatarUrl","avatarURL","isUserSelected","currentUser","includes","dispatch","setCurrentUser","type","payload","props","user","onClick","e","userIds","restProps","find","to","stateQuestions","questions","questionId","options","optionOne","text","optionTwo","author","q","leaderboard","score","answers","length","sort","a","b","item","handleCreateQuestion","optionOneText","optionTwoText","getState","question","questionCreate","v4","replace","slice","timestamp","Date","now","votes","createQuestion","OptionTwoText","onSubmit","preventDefault","console","log","target","value","ownProps","match","params","isPresent","answerState","optionOneAnswers","optionTwoAnswers","totalAnswers","answerStats","answerStatistics","answerQuestion","selectedOption","questionAnswer","ui","answerHandler","option","disabled","className","exact","path","component","Home","Leaderboard","AddQuestion","QuestionDetails","Questions","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","sarahedo","tylermcginnis","johndoe","reducer","combineReducers","action","middleware","applyMiddleware","logger","thunk","store","createStore","composeWithDevTools","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aa750336.chunk.js","sourcesContent":["export const USER_LOGIN = 'USER_LOGIN'\nexport const USER_LOGOUT = 'USER_LOGOUT'\n\nexport const QUESTION_CREATE = 'QUESTION_CREATE'\nexport const QUESTION_ANSWER = 'QUESTION_ANSWER'\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { userLogin } from '../redux/actions/actionCreators'\n\nfunction Home(props) {\n    const { isUserSelected, users, setCurrentUser } = props\n    \n    function handleUserSelect(userId) {\n        setCurrentUser(userId)\n    }\n\n    return (\n        <div>\n            Hello from Home Page\n            <ul>\n                {users.map(user => (\n                    <li key={user.id}>\n                        <button onClick={e => handleUserSelect(user.id)}>Login as {user.name}</button>\n                    </li>\n                ))}\n            </ul>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    const users = Object.keys(state.users).map(userId => ({\n        id: userId,\n        name: state.users[userId].name,\n        avatarUrl: state.users[userId].avatarURL\n    }))\n\n    const isUserSelected = state.currentUser !== '' && Object.keys(state.users).includes(state.currentUser)\n\n    return {\n        users,\n        isUserSelected\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    setCurrentUser: (userId) => dispatch(userLogin(userId))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home)\n","import { QUESTION_ANSWER, QUESTION_CREATE, USER_LOGIN, USER_LOGOUT } from \"./actionIdentifiers\";\n\nexport function userLogin(currentUser) {\n    return {\n        type: USER_LOGIN,\n        payload: {\n            currentUser\n        }\n    }\n}\n\nexport function userLogout() {\n    return {\n        type: USER_LOGOUT,\n    }\n}\n\nexport function questionCreate(question) {\n    return {\n        type: QUESTION_CREATE,\n        payload: { question }\n    }\n}\n\nexport function questionAnswer(userId, questionId, selectedOption) {\n    return {\n        type: QUESTION_ANSWER,\n        payload: { userId, questionId, selectedOption }\n    }\n}\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Redirect, Route } from 'react-router'\n\nfunction PrivateRoute(props) {\n    const { currentUser, userIds, ...restProps } = props\n\n    if (userIds.find(id => id === currentUser)) {\n        return <Route {...restProps} />\n    } else {\n        return <Redirect to='/' />\n    }\n}\n\nconst mapStateToProps = state => ({\n    currentUser: state.currentUser,\n    userIds: Object.keys(state.users)\n})\n\nexport default connect(mapStateToProps)(PrivateRoute)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\n\nfunction Questions(props) {\n    const { currentUser, questions } = props\n    return (\n        <div>\n            Hello from Questions Page for user {currentUser.name}\n            <ul>\n                {\n                    questions.map(q => (\n                        <li key={q.id}>\n                            <h3>{q.author.name} asks</h3>\n                            <p>Would you rather?</p>\n                            <p>{q.options[0]} or {q.options[1]}</p>\n                            <Link to={'/questions/' + q.id}>\n                                Go to question\n                            </Link>\n                        </li>\n                    ))\n                }\n            </ul>\n        </div>\n    )\n}\n\nconst mapStateToProps = ({ users, questions: stateQuestions, currentUser }) => {\n    const questions = Object.keys(stateQuestions).map(questionId => ({\n        id: questionId,\n        options: [\n            stateQuestions[questionId].optionOne.text,\n            stateQuestions[questionId].optionTwo.text,\n        ],\n        author: {\n            name: users[stateQuestions[questionId].author].name,\n            avatarUrl: users[stateQuestions[questionId].author].avatarURL,\n        }\n    }))\n\n    const user = {\n        id: currentUser,\n        name: users[currentUser].name,\n        avatarUrl: users[currentUser].avatarURL\n    }\n\n    return {\n        questions, currentUser: user\n    }\n}\n\nexport default connect(mapStateToProps)(Questions)","import React from 'react'\nimport { connect } from 'react-redux'\n\nfunction Leaderboard({ leaderboard }) {\n    return (\n        <div>\n            Hello from Leaderboard Page\n            <ol>\n                {leaderboard.map(item => (<li key={item.id}>\n                    <p>{item.name}</p>\n                    <p>Score: {item.score}</p>\n                </li>))}\n            </ol>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    const leaderboard = Object.keys(state.users).map(userId => {\n\n        const answers = Object.keys(state.users[userId].answers).length\n        const questions = state.users[userId].questions.length\n        const score = answers + questions\n\n        return {\n            id: userId,\n            avatarUrl: state.users[userId].avatarURL,\n            name: state.users[userId].name,\n            score\n        }\n    })\n        .sort((a, b) => b.score - a.score)\n\n    const currentUser = {\n        id: state.currentUser,\n        name: state.users[state.currentUser].name,\n        avatarUrl: state.users[state.currentUser].avatarURL\n    }\n\n    return {\n        leaderboard,\n        currentUser\n    }\n}\n\nexport default connect(mapStateToProps)(Leaderboard)\n","import {v4} from 'uuid'\nimport { questionCreate } from '../actions/actionCreators'\n\nexport const handleCreateQuestion = (optionOneText, optionTwoText) => (dispatch, getState) => {\n    const id = v4().replace('-', '').slice(0, 22)\n    const timestamp = Date.now()\n    const author = getState().currentUser\n\n    const question = {\n        id,\n        timestamp,\n        author,\n        optionOne: {\n            text: optionOneText,\n            votes: []\n        },\n        optionTwo: {\n            text: optionTwoText,\n            votes: []\n        },\n    }\n\n    dispatch(questionCreate(question))\n}\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { handleCreateQuestion } from '../redux/thunks/questions'\n\nfunction AddQuestion(props) {\n    const { createQuestion, currentUser } = props\n\n    function submitHandler(e) {\n        e.preventDefault()\n        console.log('target0', e.target[0])\n        console.log('target1', e.target[1])\n\n        createQuestion(e.target[0].value, e.target[1].value)\n    }\n\n    return (\n        <div>\n            <h2>Hello from Add Question Page for user {currentUser.name}</h2>\n            <form onSubmit={submitHandler}>\n                <input name='optionOne' type='text' />\n                <input name='optionTwo' type='text' />\n                <button type='submit'>\n                    Create\n                </button>\n            </form>\n        </div>\n    )\n}\n\nconst mapStateToProps = ({ users, questions, currentUser }) => ({\n    currentUser: users[currentUser]\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    createQuestion: (optionOneText, OptionTwoText) => dispatch(handleCreateQuestion(optionOneText, OptionTwoText))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddQuestion)","import React from 'react'\nimport { connect } from 'react-redux'\nimport { questionAnswer } from '../redux/actions/actionCreators'\n\nfunction QuestionDetails(props) {\n    const { currentUser, isPresent, question, answerQuestion } = props\n\n    let ui = null\n\n    function answerHandler (option) {\n        answerQuestion(currentUser.id, question.id, option)\n    }\n\n    if (isPresent) {\n        ui = <div>\n            <h3>{question.author.name} asks</h3>\n            <p>Would you rather?</p>\n            <button\n                onClick={e => answerHandler('optionOne')}\n                disabled={question.answerState !== 0}\n            >\n                {question.options.optionOne}\n                {\n                    question.answerState !== 0 && (\n                        <p>Percentage: {question.answerStatistics.optionOne}%</p>\n                    )\n                }\n            </button>\n            <button\n                onClick={e => answerHandler('optionTwo')}\n                disabled={question.answerState !== 0}\n            >\n                {question.options.optionTwo}\n                {\n                    question.answerState !== 0 && (\n                        <p>Percentage: {question.answerStatistics.optionTwo}%</p>\n                    )\n                }\n            </button>\n        </div>\n    } else {\n        ui = <div>\n            Sorry we couldn't find this question\n        </div>\n    }\n\n    return (\n        <div>\n            Hello from QuestionDetails Page for user {currentUser.name}\n            <div>\n                {ui}\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = ({ users, questions, currentUser }, ownProps) => {\n    const questionId = ownProps.match.params.id\n\n    const isPresent = !!questions[questionId]\n\n    const question = {}\n    if (isPresent) {\n        let answerState = 0\n\n        switch (users[currentUser].answers[questionId]) {\n            case 'optionOne':\n                answerState = 1;\n                break;\n            case 'optionTwo':\n                answerState = 2;\n                break;\n            default:\n                answerState = 0;\n        }\n\n        question.id = questionId\n        question.options = {\n            optionOne: questions[questionId].optionOne.text,\n            optionTwo: questions[questionId].optionTwo.text,\n        }\n        question.answerState = answerState\n\n        \n        const optionOneAnswers = questions[questionId].optionOne.votes.length\n        const optionTwoAnswers = questions[questionId].optionTwo.votes.length\n        const totalAnswers = optionOneAnswers + optionTwoAnswers\n\n        const answerStats = {\n            optionOne: 100*optionOneAnswers / totalAnswers ,\n            optionTwo: 100*optionTwoAnswers / totalAnswers,\n        }\n\n        const author = {\n            name: users[questions[questionId].author].name,\n            avatarUrl: users[questions[questionId].author].avatarURL,\n        }\n\n        question.answerStatistics = answerStats\n        question.author = author\n    }\n\n    const user = {\n        id: currentUser,\n        name: users[currentUser].name,\n        avatarUrl: users[currentUser].avatarURL\n    }\n\n    return {\n        currentUser: user,\n        isPresent,\n        question\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    answerQuestion: (userId, questionId, selectedOption) => dispatch(questionAnswer(userId, questionId, selectedOption))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(QuestionDetails)","import { Switch, Route } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Home from './routes/Home'\r\nimport PrivateRoute from './components/PrivateRoute';\r\nimport './App.css';\r\nimport Questions from './routes/Questions';\r\nimport Leaderboard from './routes/Leaderboard';\r\nimport AddQuestion from './routes/AddQuestion';\r\nimport QuestionDetails from './routes/QuestionDetails';\r\nimport { useEffect } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { setCurrentUser } from './redux/actions/actionCreators';\r\n\r\nfunction App(props) {\r\n  return (\r\n    <div className=\"App\">\r\n      <div>\r\n        <Link to='/'>Home</Link>\r\n        <Link to='/questions'>Questions</Link>\r\n        <Link to='/questions/add'>Add a Question</Link>\r\n        <Link to='/leaderboard'>Leaderboard</Link>\r\n      </div>\r\n      <Switch>\r\n        <Route exact path='/' component={Home} />\r\n        <PrivateRoute path='/leaderboard' component={Leaderboard} />\r\n        <PrivateRoute path='/questions/add' component={AddQuestion} />\r\n        <PrivateRoute path='/questions/:id' component={QuestionDetails} />\r\n        <PrivateRoute path='/questions' component={Questions} />\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default connect()(App);\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { USER_LOGIN, USER_LOGOUT } from \"../actions/actionIdentifiers\";\n\nconst initialState = 'johndoe'\n\nexport default function currentUser(state = initialState, action) {\n    switch (action.type) {\n        case USER_LOGIN:\n            return action.payload.currentUser\n        case USER_LOGOUT:\n            return initialState\n        default:\n            return state\n    }\n}\n","import { QUESTION_ANSWER, QUESTION_CREATE } from \"../actions/actionIdentifiers\"\n\nconst initialState = {\n    sarahedo: {\n        id: 'sarahedo',\n        name: 'Sarah Edo',\n        avatarURL: '',\n        answers: {\n            \"8xf0y6ziyjabvozdd253nd\": 'optionOne',\n            \"6ni6ok3ym7mf1p33lnez\": 'optionTwo',\n            \"am8ehyc8byjqgar0jgpub9\": 'optionTwo',\n            \"loxhs1bqm25b708cmbf3g\": 'optionTwo'\n        },\n        questions: ['8xf0y6ziyjabvozdd253nd', 'am8ehyc8byjqgar0jgpub9']\n    },\n    tylermcginnis: {\n        id: 'tylermcginnis',\n        name: 'Tyler McGinnis',\n        avatarURL: '',\n        answers: {\n            \"vthrdm985a262al8qx3do\": 'optionOne',\n            \"xj352vofupe1dqz9emx13r\": 'optionTwo',\n        },\n        questions: ['loxhs1bqm25b708cmbf3g', 'vthrdm985a262al8qx3do'],\n    },\n    johndoe: {\n        id: 'johndoe',\n        name: 'John Doe',\n        avatarURL: '',\n        answers: {\n            \"xj352vofupe1dqz9emx13r\": 'optionOne',\n            \"vthrdm985a262al8qx3do\": 'optionTwo',\n            \"6ni6ok3ym7mf1p33lnez\": 'optionTwo'\n        },\n        questions: ['6ni6ok3ym7mf1p33lnez', 'xj352vofupe1dqz9emx13r'],\n    }\n}\n\nexport default function users(state = initialState, action) {\n    switch (action.type) {\n        case QUESTION_CREATE:\n            const question = action.payload.question\n\n            return {\n                ...state,\n                [question.author]: {\n                    ...state[question.author],\n                    questions: [...state[question.author].questions, question.id]\n                }\n            }\n        case QUESTION_ANSWER:\n            const { userId, questionId, selectedOption } = action.payload\n\n            return {\n                ...state,\n                [userId]: {\n                    ...state[userId],\n                    answers: {\n                        ...state[userId].answers,\n                        [questionId]: selectedOption\n                    }\n                }\n            }\n        default: return state\n    }\n    return state\n}\n","import { QUESTION_ANSWER, QUESTION_CREATE } from \"../actions/actionIdentifiers\"\n\nconst initialState = {\n    \"8xf0y6ziyjabvozdd253nd\": {\n        id: '8xf0y6ziyjabvozdd253nd',\n        author: 'sarahedo',\n        timestamp: 1467166872634,\n        optionOne: {\n            votes: ['sarahedo'],\n            text: 'have horrible short term memory',\n        },\n        optionTwo: {\n            votes: [],\n            text: 'have horrible long term memory'\n        }\n    },\n    \"6ni6ok3ym7mf1p33lnez\": {\n        id: '6ni6ok3ym7mf1p33lnez',\n        author: 'johndoe',\n        timestamp: 1468479767190,\n        optionOne: {\n            votes: [],\n            text: 'become a superhero',\n        },\n        optionTwo: {\n            votes: ['johndoe', 'sarahedo'],\n            text: 'become a supervillain'\n        }\n    },\n    \"am8ehyc8byjqgar0jgpub9\": {\n        id: 'am8ehyc8byjqgar0jgpub9',\n        author: 'sarahedo',\n        timestamp: 1488579767190,\n        optionOne: {\n            votes: [],\n            text: 'be telekinetic',\n        },\n        optionTwo: {\n            votes: ['sarahedo'],\n            text: 'be telepathic'\n        }\n    },\n    \"loxhs1bqm25b708cmbf3g\": {\n        id: 'loxhs1bqm25b708cmbf3g',\n        author: 'tylermcginnis',\n        timestamp: 1482579767190,\n        optionOne: {\n            votes: [],\n            text: 'be a front-end developer',\n        },\n        optionTwo: {\n            votes: ['sarahedo'],\n            text: 'be a back-end developer'\n        }\n    },\n    \"vthrdm985a262al8qx3do\": {\n        id: 'vthrdm985a262al8qx3do',\n        author: 'tylermcginnis',\n        timestamp: 1489579767190,\n        optionOne: {\n            votes: ['tylermcginnis'],\n            text: 'find $50 yourself',\n        },\n        optionTwo: {\n            votes: ['johndoe'],\n            text: 'have your best friend find $500'\n        }\n    },\n    \"xj352vofupe1dqz9emx13r\": {\n        id: 'xj352vofupe1dqz9emx13r',\n        author: 'johndoe',\n        timestamp: 1493579767190,\n        optionOne: {\n            votes: ['johndoe'],\n            text: 'write JavaScript',\n        },\n        optionTwo: {\n            votes: ['tylermcginnis'],\n            text: 'write Swift'\n        }\n    },\n}\n\nexport default function questions(state = initialState, action) {\n    switch (action.type) {\n        case QUESTION_CREATE:\n            return {\n                ...state,\n                [action.payload.question.id]: action.payload.question\n            }\n        case QUESTION_ANSWER:\n            const { userId, questionId, selectedOption } = action.payload\n            return {\n                ...state,\n                [questionId]: {\n                    ...state[questionId],\n                    [selectedOption]: {\n                        ...state[questionId][selectedOption],\n                        votes: [...state[questionId][selectedOption].votes, userId]\n                    }\n                }\n            }\n\n        default: return state\n    }\n}\n","import currentUser from \"./currentUser\";\nimport users from \"./users\";\nimport questions from \"./questions\";\n\nimport { combineReducers } from \"redux\";\n\nconst reducer = combineReducers({\n    currentUser,\n    users,\n    questions\n})\n\nexport default reducer\n","import thunk from \"redux-thunk\";\nimport logger from \"redux-logger\";\nimport { applyMiddleware } from \"redux\";\n\nconst middleware = applyMiddleware(logger, thunk)\n\nexport default middleware\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { createStore } from 'redux';\r\nimport { Provider } from 'react-redux'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport reducer from './redux/reducers';\r\nimport middleware from './redux/middleware';\r\n\r\nconst store = createStore(reducer, composeWithDevTools(middleware))\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <BrowserRouter>\r\n        <App />\r\n      </BrowserRouter>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}